#!/bin/bash

#Sucht ob in den Homeverzeichnissen der User das Verzeichnis ~/backup existiert und erzeugt es im Falle, es existiert nicht.
#Sucht auf im ro-gemounteten Backupverzeichnis /backup in den einzelnen snapshots nach den 
#User-Homeverzeichnissen und erzeugt in ~/backup entsprechende Symlinks, welche mit dem Datum und der Uhrzeit des snapshots benannt sind.

DIST=$(/usr/local/bin/syssubvol)
DIST="$(basename $(/usr/bin/grub-mkrelpath /))\|__ALWAYSCURRENT"
#DIST="__ALWAYSCURRENT__"
echo $DIST
USERBKPDIR=/home/$USER/backup

echo "Create links for $USER"
#ls $USERBKPDIR

find "$USERBKPDIR/" -maxdepth 1 -mindepth 1 -type l | xargs rm -f
#if `mount |grep -v "systemd-1"|grep -q " /backup \| /backup-local "`
#then
	find $(mount |grep -v "systemd-1"|grep " /backup \| /backup-local "|awk 'BEGIN{ORS=" "}{print $3}') -mindepth 1 -maxdepth 1 -type d|grep $DIST|while read k
	do
		case $k in
		   /backup/*)SRC=extern;;
		   /backup-local/*)SRC=local;;
		esac

		case $k in
		   *afterboot)LSTBT="--afterboot";;
		   *apt_upgrade)LSTBT="--before-upgrade";;
		   *aptupgrade)LSTBT="--before-upgrade";;
		   *)LSTBT="";;
		esac

		[ -e "$k" ] || continue
		datum=`stat -c %Y "$k"`
		zeit=`date +%T -d @$datum`
		if test x`date +%D -d @$datum` == x`date +%D`
		then
			datum="heute-$zeit"
		else
		    if test x`date +%D -d @$datum` == x`date +%D -d yesterday` 
		    then
			datum="gestern-$zeit"
		    else
			datum=`stat -c %Y "$k"`
			datum=`date +%Y_%b_%d-%X -d @$datum`
		    fi
		fi
		#find "$k/home/" -mindepth 1 -maxdepth 1 -name "$USER"|xargs -I {} ln -fs {} "/home/${USER}/backup/$datum--${SRC}${LSTBT}"
		find "$k/home/" -mindepth 1 -maxdepth 1 -name "$USER"|while read i; do
			[ -e "$i" ] && ln -fs "$i" "/home/${USER}/backup/$datum--${SRC}${LSTBT}" 2>/dev/null || echo "failed $i"
		done
	done
#else
#	echo $0: systemd-backup directories not available
#fi
echo "Created links for $USER"
exit 0

#! /bin/sh

set -e

# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [ -d /run/systemd/system ] ; then
	systemctl --system daemon-reload >/dev/null || true
fi


# For user-services only, for earch target an extra section! for system-services user deb-systemd*
# put in full unit-name. for example "mkbackup@hourly.service"
#SERVICES="mkbackup-userdir.path"
#USERLOCS="/etc/systemd/user/ /usr/lib/systemd/user/"

#[ -e /etc/systemd/user/default.target.wants/ ] || mkdir -p /etc/systemd/user/default.target.wants/
#case "$1" in
#    purge)
#        for SERVICE in $SERVICES; do
#            if [ -x "/usr/bin/deb-systemd-helper-xeuser" ]; then
#                    deb-systemd-helper-xeuser purge user $SERVICES >/dev/null
#                    deb-systemd-helper-xeuser unmask user $SERVICES >/dev/null
#            fi
#        done
#	;;
#    abort-upgrade|upgrade)
#        ;;
#    failed-upgrade|abort-install|disappear)
#        ;;
#    remove)
#        for SERVICE in $SERVICES; do
#            if [ -x "/usr/bin/deb-systemd-helper-xeuser" ]; then
#                    deb-systemd-helper-xeuser mask user $SERVICES >/dev/null
#            fi
#        done
#        ;;
#
#    *)
#        echo "postrm called with unknown argument \`$1'" >&2
#        exit 0
#        ;;
#esac

# System-Services:
# put in full unit-name. for example "mkbackup@hourly.service"
#SERVICES="mkbackup.target backup.automount var-cache-backup.automount btrfs-scrub@var-cache-btrfs_pool_SYSTEM.service mkbackup@manually.service mkbackup@aptupgrade.service mkbackup@daily.service mkbackup@weekly.service mkbackup@monthly.service mkbackup@plugin.service mkbackup@manually.service"
SERVICES="mkbackup.target backup.automount var-cache-backup.automount btrfs-scrub@var-cache-btrfs_pool_SYSTEM.service mkbackup@.service"

case "$1" in
    purge)
        systemctl disable $SERVICES
        
#	if [ -x "/usr/bin/deb-systemd-helper-xeuser" ]; then
#		deb-systemd-helper-xeuser purge $SERVICES >/dev/null
#		deb-systemd-helper-xeuser unmask $SERVICES >/dev/null
#	fi
        ;;
    abort-upgrade)
        ;;
    remove)
        systemctl mask $SERVICES
#        if [ -x "/usr/bin/deb-systemd-helper-xeuser" ]; then
#                deb-systemd-helper-xeuser mask $SERVICES >/dev/null
#        fi
        ;;
    upgrade|failed-upgrade|abort-install|disappear)
        ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 0
        ;;

esac
